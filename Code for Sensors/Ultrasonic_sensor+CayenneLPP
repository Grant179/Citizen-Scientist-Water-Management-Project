// Reminder any thing starts with "//" is the comment and will not execute during code run, 
// if you wish you can delete me and others like me, we come in gray color!!!!!.

#include <LoRaWan.h>
#include <CayenneLPP.h>
#define ECHOPIN 2// Pin to receive echo pulse
#define TRIGPIN 3// Pin to send trigger pulse
unsigned char data[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 0xA,};
char buffer[256];

CayenneLPP lpp(51);
void setup(void)
{
  pinMode(ECHOPIN, INPUT);
  pinMode(TRIGPIN, OUTPUT);
    SerialUSB.begin(115200);
    while(!SerialUSB);
    
    lora.init();
    
    memset(buffer, 0, 256);
    lora.getVersion(buffer, 256, 1);
    SerialUSB.print(buffer); 
    
    memset(buffer, 0, 256);
    lora.getId(buffer, 256, 1);
    SerialUSB.print(buffer);


    // void setId(char *DevAddr, char *DevEUI, char *AppEUI);
    // Navigate to The Things Network, Find your device *DevEUI and *AppEUI and paste into line below.
    lora.setId(NULL, "*DevEUI", "*AppEUI");
    
    // setKey(char *NwkSKey, char *AppSKey, char *AppKey);
    // Replace your Device's AppKey below in the code line.
    lora.setKey(NULL, NULL, "*AppKey");

    
    
    lora.setDeciveMode(LWOTAA);
    lora.setDataRate(DR0, AS923);
    
    lora.setChannel(0, 868.1);
    lora.setChannel(1, 868.3);
    lora.setChannel(2, 868.5);
    
    lora.setReceiceWindowFirst(0, 868.1);
    lora.setReceiceWindowSecond(869.5, DR3);
    
    lora.setDutyCycle(false);
    lora.setJoinDutyCycle(false);
    
    lora.setPower(14);
    
    while(!lora.setOTAAJoin(JOIN));
}

void loop(void)
{   
    bool result = false;

  digitalWrite(TRIGPIN, LOW); // Set the trigger pin to low for 2uS
  delayMicroseconds(2);
  digitalWrite(TRIGPIN, HIGH); // Send a 10uS high to trigger ranging
  delayMicroseconds(10);
  digitalWrite(TRIGPIN, LOW); // Send pin low again
  int distance = pulseIn(ECHOPIN, HIGH,26000); // Read in times pulse
  distance= distance/58;
  SerialUSB.print(distance);
  SerialUSB.println("   cm");

    lpp.reset();
    lpp.addTemperature(1, distance);
    result = lora.transferPacket(lpp.getBuffer(), lpp.getSize());
    //result = lora.transferPacket(data, 10, 10);
    
    if(result)
    {
        short length;
        short rssi;
        
        memset(buffer, 0, 256);
        length = lora.receivePacket(buffer, 256, &rssi);
        
        if(length)
        {
            SerialUSB.print("Length is: ");
            SerialUSB.println(length);
            SerialUSB.print("RSSI is: ");
            SerialUSB.println(rssi);
            SerialUSB.print("Data is: ");
            for(unsigned char i = 0; i < length; i ++)
            {
                SerialUSB.print("0x");
                SerialUSB.print(buffer[i], HEX);
                SerialUSB.print(" ");
            }
            SerialUSB.println();
        }
    }
}

// upload me Please !!!
